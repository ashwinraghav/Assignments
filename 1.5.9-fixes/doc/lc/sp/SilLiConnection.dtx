@@SilLiConnection.pas

Summary:
  Interfaces para manejar conexiones de eventos entre objetos.

Description:
  Las interfaces de eventos se usan para recibir notificaciones de otros objetos.
  El objeto que dispara el evento, puede ofrecer multiples interfaces de eventos.
  El objeto que recibe eventos, puede conectarse a multiples interfaces de multiples objetos.

See also:
  @@Sil.Sink
---------------------------------------------------------------------------------------------------
@@IConnectable

Summary:
  Interface que implementa una clase que dispara eventos.

Description:
  Cuando un objeto quiere recibir eventos de otro, debe conectarse a la interface de eventos.
  La interface IConnectable permite que se realice esta conexion.
  Esta interface no se usa directamente, se usa a traves de la clase Sil.Sink.
  <PRE>
  Ejemplo:</PRE>
  <CODE>
    // los eventos que dispara MiBoton, se conectan a MiForm
    Sil.Sink.Connect(MiBoton, MiForm);
  </CODE>

See also:
  @@IEvSinkConnected, @@IEvSinkDisconnected
---------------------------------------------------------------------------------------------------
@@IConnectable.AddListener

Summary:
  Se llama cuando un objeto se conecta a los eventos de una clase que implementa IConnectable.

Description:
  Cuando un objeto se conecta a una interface de eventos se llama a AddListener para que la clase que
  dispara eventos almacene una referencia a este nuevo objeto receptor.
  La implementacion de este metodo es libre, pero normalmente se llama a <LINK @@EventCaster.Add, EventCaster.Add>.
  <PRE>
  Ejemplo:</PRE>
  <CODE>
    procedure TMiClase.AddListener(const Listener: IUnknown);
    begin
      EventCaster.Add(FEvents, Listener);
    end;
  </CODE>

Arguments:
  Listener:-  Es la interface del objeto que se quiere conectar

See also:
  @@RemoveListener, @@IEventList
---------------------------------------------------------------------------------------------------
@@IConnectable.RemoveListener

Summary:
  Se llama cuando un objeto se desconecta de los eventos de una clase que implementa IConnectable.

Description:
  Cuando un objeto se desconecta de una interface de eventos se llama a RemoveListener para que la clase que
  dispara eventos elimine la referencia a este objeto receptor.
  La implementacion de este metodo es libre, pero normalmente se llama a <LINK @@EventCaster.Remove, EventCaster.Remove>.
  <PRE>
  Ejemplo:</PRE>
  <CODE>
    procedure TMiClase.RemoveListener(const Listener: IUnknown);
    begin
      EventCaster.Remove(FEvents, Listener);
    end;
  </CODE>

Arguments:
  Listener:-  Es la interface del objeto que se quiere desconectar

See also:
  @@AddListener, @@IEventList
---------------------------------------------------------------------------------------------------
@@IConnectionSink

Summary:
  Interface que se implementa si se desea tener acceso a la lista de objetos conectados a los eventos.

Description:
  En algunos casos es necesario acceder a la lista de objetos conectados de una clase desde otra.
  Esto se hace a traves de IConnectionSink. Un caso es cuando se necesita vaciar la lista de eventos
  como se hace con <LINK @@Sil.Sink.Clear, Sil.Sink.Clear>.

See also: @@EventCaster
---------------------------------------------------------------------------------------------------
@@IConnectionSink.Listeners

Summary:
  Permite acceder a la lista de objetos conectados a interfaces de eventos.

Description:
  Deveuelve una IEventList con todos los objetos que estan conectados para recibir eventos.

See also:
  @@IEvSinkConnected, @@IEvSinkDisconnected
---------------------------------------------------------------------------------------------------
@@IEvSinkConnected

Summary:
Description:
See also:
---------------------------------------------------------------------------------------------------
@@IEvSinkConnected.OnSinkConnected

Summary:
Description:
Arguments:
Return Value:
See also:
---------------------------------------------------------------------------------------------------
@@IEvSinkDisconnected

Summary:
Description:
See also:
---------------------------------------------------------------------------------------------------
@@IEvSinkDisconnected.IEvSinkDisconnected

Summary:
Description:
Arguments:
Return Value:
See also:

